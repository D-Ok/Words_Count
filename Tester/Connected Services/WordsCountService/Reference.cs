//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tester.WordsCountService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WordsCountService.IWordsCounter")]
    public interface IWordsCounter {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordsCounter/Answer", ReplyAction="http://tempuri.org/IWordsCounter/AnswerResponse")]
        string Answer(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordsCounter/Answer", ReplyAction="http://tempuri.org/IWordsCounter/AnswerResponse")]
        System.Threading.Tasks.Task<string> AnswerAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordsCounter/AddUser", ReplyAction="http://tempuri.org/IWordsCounter/AddUserResponse")]
        bool AddUser(WordsCountSkyrtaOliinyk.DBModels.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordsCounter/AddUser", ReplyAction="http://tempuri.org/IWordsCounter/AddUserResponse")]
        System.Threading.Tasks.Task<bool> AddUserAsync(WordsCountSkyrtaOliinyk.DBModels.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordsCounter/AddRequest", ReplyAction="http://tempuri.org/IWordsCounter/AddRequestResponse")]
        void AddRequest(WordsCountSkyrtaOliinyk.DBModels.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordsCounter/AddRequest", ReplyAction="http://tempuri.org/IWordsCounter/AddRequestResponse")]
        System.Threading.Tasks.Task AddRequestAsync(WordsCountSkyrtaOliinyk.DBModels.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordsCounter/GetUser", ReplyAction="http://tempuri.org/IWordsCounter/GetUserResponse")]
        WordsCountSkyrtaOliinyk.DBModels.User GetUser(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordsCounter/GetUser", ReplyAction="http://tempuri.org/IWordsCounter/GetUserResponse")]
        System.Threading.Tasks.Task<WordsCountSkyrtaOliinyk.DBModels.User> GetUserAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordsCounter/UpdateUserDate", ReplyAction="http://tempuri.org/IWordsCounter/UpdateUserDateResponse")]
        WordsCountSkyrtaOliinyk.DBModels.User UpdateUserDate(System.Guid userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordsCounter/UpdateUserDate", ReplyAction="http://tempuri.org/IWordsCounter/UpdateUserDateResponse")]
        System.Threading.Tasks.Task<WordsCountSkyrtaOliinyk.DBModels.User> UpdateUserDateAsync(System.Guid userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordsCounter/GetAllRequests", ReplyAction="http://tempuri.org/IWordsCounter/GetAllRequestsResponse")]
        WordsCountSkyrtaOliinyk.DBModels.Request[] GetAllRequests(WordsCountSkyrtaOliinyk.DBModels.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordsCounter/GetAllRequests", ReplyAction="http://tempuri.org/IWordsCounter/GetAllRequestsResponse")]
        System.Threading.Tasks.Task<WordsCountSkyrtaOliinyk.DBModels.Request[]> GetAllRequestsAsync(WordsCountSkyrtaOliinyk.DBModels.User user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWordsCounterChannel : Tester.WordsCountService.IWordsCounter, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WordsCounterClient : System.ServiceModel.ClientBase<Tester.WordsCountService.IWordsCounter>, Tester.WordsCountService.IWordsCounter {
        
        public WordsCounterClient() {
        }
        
        public WordsCounterClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WordsCounterClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WordsCounterClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WordsCounterClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Answer(string name) {
            return base.Channel.Answer(name);
        }
        
        public System.Threading.Tasks.Task<string> AnswerAsync(string name) {
            return base.Channel.AnswerAsync(name);
        }
        
        public bool AddUser(WordsCountSkyrtaOliinyk.DBModels.User user) {
            return base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task<bool> AddUserAsync(WordsCountSkyrtaOliinyk.DBModels.User user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public void AddRequest(WordsCountSkyrtaOliinyk.DBModels.Request request) {
            base.Channel.AddRequest(request);
        }
        
        public System.Threading.Tasks.Task AddRequestAsync(WordsCountSkyrtaOliinyk.DBModels.Request request) {
            return base.Channel.AddRequestAsync(request);
        }
        
        public WordsCountSkyrtaOliinyk.DBModels.User GetUser(string login) {
            return base.Channel.GetUser(login);
        }
        
        public System.Threading.Tasks.Task<WordsCountSkyrtaOliinyk.DBModels.User> GetUserAsync(string login) {
            return base.Channel.GetUserAsync(login);
        }
        
        public WordsCountSkyrtaOliinyk.DBModels.User UpdateUserDate(System.Guid userGuid) {
            return base.Channel.UpdateUserDate(userGuid);
        }
        
        public System.Threading.Tasks.Task<WordsCountSkyrtaOliinyk.DBModels.User> UpdateUserDateAsync(System.Guid userGuid) {
            return base.Channel.UpdateUserDateAsync(userGuid);
        }
        
        public WordsCountSkyrtaOliinyk.DBModels.Request[] GetAllRequests(WordsCountSkyrtaOliinyk.DBModels.User user) {
            return base.Channel.GetAllRequests(user);
        }
        
        public System.Threading.Tasks.Task<WordsCountSkyrtaOliinyk.DBModels.Request[]> GetAllRequestsAsync(WordsCountSkyrtaOliinyk.DBModels.User user) {
            return base.Channel.GetAllRequestsAsync(user);
        }
    }
}
